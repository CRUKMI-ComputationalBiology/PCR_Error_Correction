--------------------
./configure --help
Thu 19 Jul 2018 11:06:13 BST
usage:
  configure [--const] [--zprefix] [--prefix=PREFIX]  [--eprefix=EXPREFIX]
    [--static] [--64] [--libdir=LIBDIR] [--sharedlibdir=LIBDIR]
    [--includedir=INCLUDEDIR] [--archs="-arch i386 -arch x86_64"]
--------------------
./configure --prefix=../zlib-1.2.11/
Thu 19 Jul 2018 11:08:26 BST
Checking for gcc...
=== ztest48615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest48615.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest48615.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest48615.c

Checking for shared library support...
=== ztest48615.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest48615.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest48615.dylib ztest48615.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest48615.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest48615.c
Checking for size_t... Yes.


=== ztest48615.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest48615.c
ztest48615.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest48615.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest48615 ztest48615.c
Checking for fseeko... Yes.

=== ztest48615.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest48615 ztest48615.c
Checking for strerror... Yes.

=== ztest48615.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest48615.c
Checking for unistd.h... Yes.

=== ztest48615.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest48615.c
Checking for stdarg.h... Yes.

=== ztest48615.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest48615.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest48615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest48615 ztest48615.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest48615.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest48615.c
Checking for return value of vsnprintf()... Yes.

=== ztest48615.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest48615.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = ../zlib-1.2.11/
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 11:29:38 BST
Checking for gcc...
=== ztest49976.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest49976.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest49976.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest49976.c

Checking for shared library support...
=== ztest49976.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest49976.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest49976.dylib ztest49976.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest49976.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest49976.c
Checking for size_t... Yes.


=== ztest49976.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest49976.c
ztest49976.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest49976.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest49976 ztest49976.c
Checking for fseeko... Yes.

=== ztest49976.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest49976 ztest49976.c
Checking for strerror... Yes.

=== ztest49976.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest49976.c
Checking for unistd.h... Yes.

=== ztest49976.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest49976.c
Checking for stdarg.h... Yes.

=== ztest49976.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest49976.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest49976.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest49976 ztest49976.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest49976.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest49976.c
Checking for return value of vsnprintf()... Yes.

=== ztest49976.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest49976.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 11:41:56 BST
Checking for gcc...
=== ztest52006.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest52006.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest52006.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest52006.c

Checking for shared library support...
=== ztest52006.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest52006.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest52006.dylib ztest52006.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest52006.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest52006.c
Checking for size_t... Yes.


=== ztest52006.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest52006.c
ztest52006.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest52006.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest52006 ztest52006.c
Checking for fseeko... Yes.

=== ztest52006.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest52006 ztest52006.c
Checking for strerror... Yes.

=== ztest52006.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest52006.c
Checking for unistd.h... Yes.

=== ztest52006.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest52006.c
Checking for stdarg.h... Yes.

=== ztest52006.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest52006.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest52006.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest52006 ztest52006.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest52006.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest52006.c
Checking for return value of vsnprintf()... Yes.

=== ztest52006.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest52006.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 11:48:43 BST
Checking for gcc...
=== ztest52157.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest52157.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest52157.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest52157.c

Checking for shared library support...
=== ztest52157.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest52157.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest52157.dylib ztest52157.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest52157.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest52157.c
Checking for size_t... Yes.


=== ztest52157.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest52157.c
ztest52157.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest52157.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest52157 ztest52157.c
Checking for fseeko... Yes.

=== ztest52157.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest52157 ztest52157.c
Checking for strerror... Yes.

=== ztest52157.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest52157.c
Checking for unistd.h... Yes.

=== ztest52157.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest52157.c
Checking for stdarg.h... Yes.

=== ztest52157.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest52157.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest52157.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest52157 ztest52157.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest52157.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest52157.c
Checking for return value of vsnprintf()... Yes.

=== ztest52157.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest52157.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 12:01:23 BST
Checking for gcc...
=== ztest53021.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest53021.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest53021.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest53021.c

Checking for shared library support...
=== ztest53021.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest53021.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest53021.dylib ztest53021.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest53021.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest53021.c
Checking for size_t... Yes.


=== ztest53021.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest53021.c
ztest53021.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest53021.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest53021 ztest53021.c
Checking for fseeko... Yes.

=== ztest53021.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest53021 ztest53021.c
Checking for strerror... Yes.

=== ztest53021.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest53021.c
Checking for unistd.h... Yes.

=== ztest53021.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest53021.c
Checking for stdarg.h... Yes.

=== ztest53021.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest53021.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest53021.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest53021 ztest53021.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest53021.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest53021.c
Checking for return value of vsnprintf()... Yes.

=== ztest53021.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest53021.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 12:03:12 BST
Checking for gcc...
=== ztest53652.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest53652.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest53652.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest53652.c

Checking for shared library support...
=== ztest53652.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest53652.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest53652.dylib ztest53652.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest53652.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest53652.c
Checking for size_t... Yes.


=== ztest53652.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest53652.c
ztest53652.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest53652.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest53652 ztest53652.c
Checking for fseeko... Yes.

=== ztest53652.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest53652 ztest53652.c
Checking for strerror... Yes.

=== ztest53652.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest53652.c
Checking for unistd.h... Yes.

=== ztest53652.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest53652.c
Checking for stdarg.h... Yes.

=== ztest53652.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest53652.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest53652.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest53652 ztest53652.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest53652.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest53652.c
Checking for return value of vsnprintf()... Yes.

=== ztest53652.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest53652.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 12:05:03 BST
Checking for gcc...
=== ztest54301.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest54301.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest54301.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest54301.c

Checking for shared library support...
=== ztest54301.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest54301.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest54301.dylib ztest54301.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest54301.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest54301.c
Checking for size_t... Yes.


=== ztest54301.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest54301.c
ztest54301.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest54301.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest54301 ztest54301.c
Checking for fseeko... Yes.

=== ztest54301.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest54301 ztest54301.c
Checking for strerror... Yes.

=== ztest54301.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest54301.c
Checking for unistd.h... Yes.

=== ztest54301.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest54301.c
Checking for stdarg.h... Yes.

=== ztest54301.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest54301.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest54301.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest54301 ztest54301.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest54301.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest54301.c
Checking for return value of vsnprintf()... Yes.

=== ztest54301.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest54301.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 15:25:13 BST
Checking for gcc...
=== ztest55295.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest55295.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest55295.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest55295.c

Checking for shared library support...
=== ztest55295.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest55295.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest55295.dylib ztest55295.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest55295.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest55295.c
Checking for size_t... Yes.


=== ztest55295.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest55295.c
ztest55295.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest55295.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest55295 ztest55295.c
Checking for fseeko... Yes.

=== ztest55295.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest55295 ztest55295.c
Checking for strerror... Yes.

=== ztest55295.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest55295.c
Checking for unistd.h... Yes.

=== ztest55295.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest55295.c
Checking for stdarg.h... Yes.

=== ztest55295.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest55295.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest55295.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest55295 ztest55295.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest55295.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest55295.c
Checking for return value of vsnprintf()... Yes.

=== ztest55295.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest55295.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 15:27:09 BST
Checking for gcc...
=== ztest56020.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest56020.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest56020.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest56020.c

Checking for shared library support...
=== ztest56020.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest56020.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest56020.dylib ztest56020.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest56020.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest56020.c
Checking for size_t... Yes.


=== ztest56020.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest56020.c
ztest56020.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest56020.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest56020 ztest56020.c
Checking for fseeko... Yes.

=== ztest56020.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest56020 ztest56020.c
Checking for strerror... Yes.

=== ztest56020.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest56020.c
Checking for unistd.h... Yes.

=== ztest56020.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest56020.c
Checking for stdarg.h... Yes.

=== ztest56020.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest56020.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest56020.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest56020 ztest56020.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest56020.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest56020.c
Checking for return value of vsnprintf()... Yes.

=== ztest56020.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest56020.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 15:30:14 BST
Checking for gcc...
=== ztest56738.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest56738.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest56738.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest56738.c

Checking for shared library support...
=== ztest56738.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest56738.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest56738.dylib ztest56738.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest56738.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest56738.c
Checking for size_t... Yes.


=== ztest56738.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest56738.c
ztest56738.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest56738.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest56738 ztest56738.c
Checking for fseeko... Yes.

=== ztest56738.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest56738 ztest56738.c
Checking for strerror... Yes.

=== ztest56738.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest56738.c
Checking for unistd.h... Yes.

=== ztest56738.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest56738.c
Checking for stdarg.h... Yes.

=== ztest56738.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest56738.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest56738.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest56738 ztest56738.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest56738.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest56738.c
Checking for return value of vsnprintf()... Yes.

=== ztest56738.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest56738.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 15:33:02 BST
Checking for gcc...
=== ztest57457.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest57457.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest57457.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest57457.c

Checking for shared library support...
=== ztest57457.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest57457.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest57457.dylib ztest57457.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest57457.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest57457.c
Checking for size_t... Yes.


=== ztest57457.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest57457.c
ztest57457.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest57457.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest57457 ztest57457.c
Checking for fseeko... Yes.

=== ztest57457.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest57457 ztest57457.c
Checking for strerror... Yes.

=== ztest57457.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest57457.c
Checking for unistd.h... Yes.

=== ztest57457.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest57457.c
Checking for stdarg.h... Yes.

=== ztest57457.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest57457.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest57457.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest57457 ztest57457.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest57457.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest57457.c
Checking for return value of vsnprintf()... Yes.

=== ztest57457.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest57457.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 15:37:04 BST
Checking for gcc...
=== ztest58185.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest58185.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest58185.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest58185.c

Checking for shared library support...
=== ztest58185.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest58185.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest58185.dylib ztest58185.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest58185.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest58185.c
Checking for size_t... Yes.


=== ztest58185.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58185.c
ztest58185.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest58185.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest58185 ztest58185.c
Checking for fseeko... Yes.

=== ztest58185.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest58185 ztest58185.c
Checking for strerror... Yes.

=== ztest58185.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest58185.c
Checking for unistd.h... Yes.

=== ztest58185.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest58185.c
Checking for stdarg.h... Yes.

=== ztest58185.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest58185.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest58185.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest58185 ztest58185.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest58185.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest58185.c
Checking for return value of vsnprintf()... Yes.

=== ztest58185.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest58185.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 15:38:33 BST
Checking for gcc...
=== ztest58901.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest58901.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest58901.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest58901.c

Checking for shared library support...
=== ztest58901.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest58901.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest58901.dylib ztest58901.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest58901.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest58901.c
Checking for size_t... Yes.


=== ztest58901.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest58901.c
ztest58901.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest58901.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest58901 ztest58901.c
Checking for fseeko... Yes.

=== ztest58901.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest58901 ztest58901.c
Checking for strerror... Yes.

=== ztest58901.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest58901.c
Checking for unistd.h... Yes.

=== ztest58901.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest58901.c
Checking for stdarg.h... Yes.

=== ztest58901.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest58901.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest58901.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest58901 ztest58901.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest58901.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest58901.c
Checking for return value of vsnprintf()... Yes.

=== ztest58901.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest58901.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Thu 19 Jul 2018 16:01:13 BST
Checking for gcc...
=== ztest31292.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest31292.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest31292.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest31292.c

Checking for shared library support...
=== ztest31292.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest31292.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest31292.dylib ztest31292.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest31292.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest31292.c
Checking for size_t... Yes.


=== ztest31292.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest31292.c
ztest31292.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest31292.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest31292 ztest31292.c
Checking for fseeko... Yes.

=== ztest31292.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest31292 ztest31292.c
Checking for strerror... Yes.

=== ztest31292.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest31292.c
Checking for unistd.h... Yes.

=== ztest31292.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest31292.c
Checking for stdarg.h... Yes.

=== ztest31292.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest31292.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest31292.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest31292 ztest31292.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest31292.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest31292.c
Checking for return value of vsnprintf()... Yes.

=== ztest31292.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest31292.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Mon 23 Jul 2018 11:36:29 BST
Checking for gcc...
=== ztest94072.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest94072.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest94072.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest94072.c

Checking for shared library support...
=== ztest94072.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest94072.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest94072.dylib ztest94072.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest94072.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest94072.c
Checking for size_t... Yes.


=== ztest94072.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest94072.c
ztest94072.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest94072.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest94072 ztest94072.c
Checking for fseeko... Yes.

=== ztest94072.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest94072 ztest94072.c
Checking for strerror... Yes.

=== ztest94072.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest94072.c
Checking for unistd.h... Yes.

=== ztest94072.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest94072.c
Checking for stdarg.h... Yes.

=== ztest94072.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest94072.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest94072.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest94072 ztest94072.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest94072.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest94072.c
Checking for return value of vsnprintf()... Yes.

=== ztest94072.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest94072.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Mon 23 Jul 2018 13:49:46 BST
Checking for gcc...
=== ztest10234.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest10234.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest10234.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest10234.c

Checking for shared library support...
=== ztest10234.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest10234.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest10234.dylib ztest10234.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest10234.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest10234.c
Checking for size_t... Yes.


=== ztest10234.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest10234.c
ztest10234.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest10234.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest10234 ztest10234.c
Checking for fseeko... Yes.

=== ztest10234.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest10234 ztest10234.c
Checking for strerror... Yes.

=== ztest10234.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest10234.c
Checking for unistd.h... Yes.

=== ztest10234.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest10234.c
Checking for stdarg.h... Yes.

=== ztest10234.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest10234.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest10234.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest10234 ztest10234.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest10234.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest10234.c
Checking for return value of vsnprintf()... Yes.

=== ztest10234.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest10234.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Mon 23 Jul 2018 14:39:37 BST
Checking for gcc...
=== ztest16797.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest16797.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest16797.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest16797.c

Checking for shared library support...
=== ztest16797.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest16797.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest16797.dylib ztest16797.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest16797.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest16797.c
Checking for size_t... Yes.


=== ztest16797.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest16797.c
ztest16797.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest16797.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest16797 ztest16797.c
Checking for fseeko... Yes.

=== ztest16797.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest16797 ztest16797.c
Checking for strerror... Yes.

=== ztest16797.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest16797.c
Checking for unistd.h... Yes.

=== ztest16797.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest16797.c
Checking for stdarg.h... Yes.

=== ztest16797.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest16797.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest16797.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest16797 ztest16797.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest16797.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest16797.c
Checking for return value of vsnprintf()... Yes.

=== ztest16797.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest16797.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Tue 24 Jul 2018 10:05:28 BST
Checking for gcc...
=== ztest38980.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest38980.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest38980.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest38980.c

Checking for shared library support...
=== ztest38980.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest38980.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest38980.dylib ztest38980.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest38980.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest38980.c
Checking for size_t... Yes.


=== ztest38980.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest38980.c
ztest38980.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest38980.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest38980 ztest38980.c
Checking for fseeko... Yes.

=== ztest38980.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest38980 ztest38980.c
Checking for strerror... Yes.

=== ztest38980.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest38980.c
Checking for unistd.h... Yes.

=== ztest38980.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest38980.c
Checking for stdarg.h... Yes.

=== ztest38980.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest38980.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest38980.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest38980 ztest38980.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest38980.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest38980.c
Checking for return value of vsnprintf()... Yes.

=== ztest38980.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest38980.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


--------------------
./configure
Tue 24 Jul 2018 10:07:03 BST
Checking for gcc...
=== ztest40210.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest40210.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest40210.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest40210.c

Checking for shared library support...
=== ztest40210.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest40210.c
gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11 -O3 -fPIC -o ztest40210.dylib ztest40210.o
Building shared library libz.1.2.11.dylib with gcc.

=== ztest40210.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest40210.c
Checking for size_t... Yes.


=== ztest40210.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest40210.c
ztest40210.c:2:1: error: unknown type name 'off64_t'; did you mean 'off_t'?
off64_t dummy = 0;
^~~~~~~
off_t
/usr/include/sys/_types/_off_t.h:30:25: note: 'off_t' declared here
typedef __darwin_off_t          off_t;
                                ^
1 error generated.
(exit code 1)
Checking for off64_t... No.

=== ztest40210.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -O3 -o ztest40210 ztest40210.c
Checking for fseeko... Yes.

=== ztest40210.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -o ztest40210 ztest40210.c
Checking for strerror... Yes.

=== ztest40210.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 ztest40210.c
Checking for unistd.h... Yes.

=== ztest40210.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 ztest40210.c
Checking for stdarg.h... Yes.

=== ztest40210.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 ztest40210.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest40210.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -o ztest40210 ztest40210.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest40210.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 ztest40210.c
Checking for return value of vsnprintf()... Yes.

=== ztest40210.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 ztest40210.c
Checking for attribute(visibility) support... Yes.

ALL = static shared
AR = /usr/bin/libtool
ARFLAGS = -o
CC = gcc
CFLAGS = -O3 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -dynamiclib -install_name ${exec_prefix}/lib/libz.1.dylib -compatibility_version 1 -current_version 1.2.11
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -DHAVE_HIDDEN
SHAREDLIB = libz.dylib
SHAREDLIBM = libz.1.dylib
SHAREDLIBV = libz.1.2.11.dylib
STATICLIB = libz.a
TEST = all teststatic testshared
VER = 1.2.11
Z_U4 =
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Darwin
--------------------


